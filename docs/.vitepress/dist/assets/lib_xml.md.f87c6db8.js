import{_ as o,r as t,o as l,c,b as r,w as p,a,d as n,e as s}from"./app.e2658e45.js";const f='{"title":"quick.xml","description":"","frontmatter":{},"headers":[{"level":2,"title":"quick.xml \u4F7F\u7528","slug":"quick-xml-\u4F7F\u7528"},{"level":2,"title":"toJson xml \u8F6C\u4E3A json","slug":"tojson-xml-\u8F6C\u4E3A-json"},{"level":2,"title":"toCore xml \u9002\u914D core \u6CE8\u91CA,\u8F6C\u4E3A json","slug":"tocore-xml-\u9002\u914D-core-\u6CE8\u91CA-\u8F6C\u4E3A-json"}],"relativePath":"lib/xml.md","lastUpdated":1636215949485}',i={},u=a(`<h1 id="quick-xml" tabindex="-1">quick.xml <a class="header-anchor" href="#quick-xml" aria-hidden="true">#</a></h1><h2 id="quick-xml-\u4F7F\u7528" tabindex="-1">quick.xml \u4F7F\u7528 <a class="header-anchor" href="#quick-xml-\u4F7F\u7528" aria-hidden="true">#</a></h2><div class="language-js line-numbers-mode"><pre><code><span class="token keyword">export</span> <span class="token punctuation">{</span> toCore<span class="token punctuation">,</span> toJson <span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br></div></div><h2 id="tojson-xml-\u8F6C\u4E3A-json" tabindex="-1"><code>toJson</code> xml \u8F6C\u4E3A json <a class="header-anchor" href="#tojson-xml-\u8F6C\u4E3A-json" aria-hidden="true">#</a></h2>`,4),m=n("div",{class:"language-js line-numbers-mode"},[n("pre",null,[n("code",null,[n("span",{class:"token comment"},`/**
 * \u8F6C\u4E3Ajson \u5BF9\u8C61
 * @param {*} xml \u5185\u5BB9
 * @param {*} opts \u8F93\u51FA\u7684\u683C\u5F0F\u914D\u7F6E\u53C2\u6570
 * opts:{format:\u5185\u5BB9\u683C\u5F0F\u5316\u65B9\u6CD5,\u9ED8\u8BA4\u53BB\u9664\u7A7A\u683C\uFF0C\u6362\u884C\u7B49}
 */`),s(`
`),n("span",{class:"token comment"},"// const toJson = (xml, opts) => {}"),s(`

`),n("span",{class:"token keyword"},"let"),s(" _xml "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token template-string"},[n("span",{class:"token template-punctuation string"},"`"),n("span",{class:"token string"},"<person><name>\u5F20\u4E09</name><age>19</age><gender>\u7537</gender></person>"),n("span",{class:"token template-punctuation string"},"`")]),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token punctuation"},"{"),s(`
  toJson`),n("span",{class:"token operator"},":"),s(" xml"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"toJson"),n("span",{class:"token punctuation"},"("),s("_xml"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},";"),s(`
`)])]),n("div",{class:"line-numbers-wrapper"},[n("span",{class:"line-number"},"1"),n("br"),n("span",{class:"line-number"},"2"),n("br"),n("span",{class:"line-number"},"3"),n("br"),n("span",{class:"line-number"},"4"),n("br"),n("span",{class:"line-number"},"5"),n("br"),n("span",{class:"line-number"},"6"),n("br"),n("span",{class:"line-number"},"7"),n("br"),n("span",{class:"line-number"},"8"),n("br"),n("span",{class:"line-number"},"9"),n("br"),n("span",{class:"line-number"},"10"),n("br"),n("span",{class:"line-number"},"11"),n("br"),n("span",{class:"line-number"},"12"),n("br"),n("span",{class:"line-number"},"13"),n("br")])],-1),d=a(`<h2 id="tocore-xml-\u9002\u914D-core-\u6CE8\u91CA-\u8F6C\u4E3A-json" tabindex="-1"><code>toCore</code> xml \u9002\u914D core \u6CE8\u91CA,\u8F6C\u4E3A json <a class="header-anchor" href="#tocore-xml-\u9002\u914D-core-\u6CE8\u91CA-\u8F6C\u4E3A-json" aria-hidden="true">#</a></h2><div class="language-js line-numbers-mode"><pre><code><span class="token comment">/**
 * \u9002\u914Dcore\u6CE8\u91CA,\u8F6C\u4E3Ajson
 * @param {*} jsonDoc toJson\u8F6C\u6362\u5BF9\u8C61
 */</span>
<span class="token keyword">const</span> <span class="token function-variable function">toCore</span> <span class="token operator">=</span> <span class="token parameter">jsonDoc</span> <span class="token operator">=&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div>`,2);function b(k,_,x,h,j,g){const e=t("CodeRun");return l(),c("div",null,[u,r(e,{dll:"xml",editable:""},{default:p(()=>[m]),_:1}),d])}var T=o(i,[["render",b]]);export{f as __pageData,T as default};
